import type { Event } from "./Event.lib.avt";
import { EndPoint } from "./EndPoint.lib.avt";

namespace WebSocket {

    export interface WsRouteSendOptions {
        uid?: string, 
        timeout?: number
    }

    export class Route {
        public readonly endpoint: EndPoint;
        public constructor(endpoint?: EndPoint) {
            this.endpoint = endpoint ?? EndPoint.getInstance();
        }

        public getPrefix(): string {
            return "";
        }
    }
}

export type ExtractResponse<T extends Event<U>, U = any> = T extends Event<infer U> ? 
Aventus.ResultWithError<Aventus.ExtractFromError<U>> 
: never;