import { WsRoute } from '../../socket/WsRoute.lib.avt';
import { WsEndPoint } from '../../socket/WsEndPoint.lib.avt';
import { WsEvent } from '../../socket/WsEvent.lib.avt';

namespace WebSocket {

	export abstract class StorableWsRoute<T extends Aventus.IData> extends WsRoute {
		
		public events: {
			GetAll: StorableWsRoute_GetAll<T>,
			Create: StorableWsRoute_Create<T>,
			CreateMany: StorableWsRoute_CreateMany<T>,
			GetById: StorableWsRoute_GetById<T>,
			Update: StorableWsRoute_Update<T>,
			UpdateMany: StorableWsRoute_UpdateMany<T>,
			Delete: StorableWsRoute_Delete<T>,
			DeleteMany: StorableWsRoute_DeleteMany<T>,
		}
		
		public constructor(endpoint: WsEndPoint) {
			super(endpoint);
			this.events = {
				GetAll: new StorableWsRoute_GetAll<T>(endpoint, this.StorableName),
				Create: new StorableWsRoute_Create<T>(endpoint, this.StorableName),
				CreateMany: new StorableWsRoute_CreateMany<T>(endpoint, this.StorableName),
				GetById: new StorableWsRoute_GetById<T>(endpoint, this.StorableName),
				Update: new StorableWsRoute_Update<T>(endpoint, this.StorableName),
				UpdateMany: new StorableWsRoute_UpdateMany<T>(endpoint, this.StorableName),
				Delete: new StorableWsRoute_Delete<T>(endpoint, this.StorableName),
				DeleteMany: new StorableWsRoute_DeleteMany<T>(endpoint, this.StorableName),
			};
		}

		public async GetAll() {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}`);
		}

		public async Create(body: { item: T } | FormData) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}`, body);
		}

		public async CreateMany(body: { list: T[] } | FormData) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}s`, body);
		}

		public async GetById(id: number) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}/${id}`);
		}

		public async Update(id: number, body: { item: T } | FormData) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}/${id}`, body);
		}

		public async UpdateMany(body: { list: T[] } | FormData) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}s`, body);
		}

		public async Delete(id: number) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}/${id}`);
		}

		public async DeleteMany(body: { ids: number[] } | FormData) {
			await this.endpoint.sendMessageAndWait(`/${this.StorableName()}s`, body);
		}

		public abstract StorableName(): string;
	}
	 
	export class StorableWsRoute_GetAll<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}`;
		}
	}
	 
	export class StorableWsRoute_Create<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}`;
		}
	}
	 
	export class StorableWsRoute_CreateMany<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}s`;
		}
	}
	 
	export class StorableWsRoute_GetById<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}/{id:number}`;
		}
	}
	 
	export class StorableWsRoute_Update<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}/{id:number}`;
		}
	}
	 
	export class StorableWsRoute_UpdateMany<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}s`;
		}
	}
	 
	export class StorableWsRoute_Delete<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}/{id:number}`;
		}
	}
	 
	export class StorableWsRoute_DeleteMany<T> extends WsEvent<> {
		
		public StorableName: () => string;
		public constructor(endpoint: WsEndPoint, StorableName: () => string) {
			super(endpoint);
			this.StorableName = StorableName;
		}
		
		/**
		 * @inheritdoc
		 */
		protected override path(): string {
			return `/${this.StorableName()}s`;
		}
	}

}